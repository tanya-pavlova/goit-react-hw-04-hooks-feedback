{"version":3,"sources":["components/Statistics/statistics.module.css","components/FeedbackOptions/feedbackOptions.module.css","components/Section/section.module.css","components/Notification/notification.module.css","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Section","title","children","className","styles","FeedbackOption","options","onLeaveFeedback","buttonContainer","map","option","button","type","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","feedbackList","feedbackItem","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Object","keys","FeedbackOptions","prevGood","prevNeutral","prevBad","Math","floor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,aAAe,iCAAiC,aAAe,mC,kBCAjFD,EAAOC,QAAU,CAAC,OAAS,gCAAgC,gBAAkB,2C,iBCA7ED,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,QAAU,gC,2GCkBbC,EAfC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,oCACI,oBAAIC,UAAWC,IAAOH,MAAtB,SAA8BA,IAC7BC,M,gBCoBEG,EAxBQ,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC/B,OAEI,qBAAKJ,UAAWC,IAAOI,gBAAvB,SACKF,EAAQG,KAAI,SAAAC,GAAM,OACf,wBACIP,UAAWC,IAAOO,OAClBC,KAAK,SACLC,QAAS,kBAAMN,EAAgBG,IAHnC,SAOKA,GAHIA,S,gBCCVI,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,mBAAGZ,UAAWC,IAAOW,QAArB,SAA+BA,K,gBCkBxBC,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OACI,qBAAIlB,UAAWC,IAAOkB,aAAtB,UACI,qBAAInB,UAAWC,IAAOmB,aAAtB,mBAA4CN,KAC5C,qBAAId,UAAWC,IAAOmB,aAAtB,sBAA8CL,KAC9C,qBAAIf,UAAWC,IAAOmB,aAAtB,kBAA0CJ,KAC1C,qBAAIhB,UAAWC,IAAOmB,aAAtB,mBAA2CH,KAC3C,qBAAIjB,UAAWC,IAAOmB,aAAtB,+BAAuDF,EAAvD,WCLG,SAASG,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOP,EAAP,KAAgBS,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAON,EAAP,KAAYS,EAAZ,KAqBMC,EAAqB,WACzB,OAAOZ,EAAOC,EAAUC,GAQpBb,EAAUwB,OAAOC,KAAK,CAAEd,OAAMC,UAASC,QACvCC,EAAQS,IAEd,OACE,qCACE,cAAC,EAAD,CAAS5B,MAAM,wBAAf,SACE,cAAC+B,EAAD,CACE1B,QAASA,EACTC,gBApCY,SAACD,GACnB,OAAQA,GACN,IAAK,OACHoB,GAAQ,SAAAO,GAAQ,OAAIA,EAAW,KAC/B,MAEF,IAAK,UACHN,GAAW,SAAAO,GAAW,OAAIA,EAAc,KACxC,MAEF,IAAK,MACHN,GAAO,SAAAO,GAAO,OAAIA,EAAU,KAC5B,MAEF,QACE,aAyBF,cAAC,EAAD,CAASlC,MAAM,aAAf,SACa,IAAVmB,EACC,cAAC,EAAD,CAAcL,QAAQ,sBAEtB,cAAC,EAAD,CACEE,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAxBDe,KAAKC,MAAc,IAAPpB,EAAcY,YCpCrC,IAYeS,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACzB,EAAD,MAEF0B,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7d321954.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackItem\":\"statistics_feedbackItem__2Hvh3\",\"feedbackList\":\"statistics_feedbackList__vY60E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"feedbackOptions_button__15Wes\",\"buttonContainer\":\"feedbackOptions_buttonContainer__2gNon\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"section_title__2s8W2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"notification_message__GuZUa\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './section.module.css'\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <section>\r\n            <h2 className={styles.title}>{title}</h2>\r\n            {children}\r\n        </section>\r\n    );\r\n};\r\n\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Section;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './feedbackOptions.module.css'\r\n\r\nconst FeedbackOption = ({ options, onLeaveFeedback }) => {\r\n    return (\r\n\r\n        <div className={styles.buttonContainer}>\r\n            {options.map(option => (\r\n                <button\r\n                    className={styles.button}\r\n                    type=\"button\"\r\n                    onClick={() => onLeaveFeedback(option)}\r\n                    key={option}\r\n\r\n                >\r\n                    {option}\r\n                </button>\r\n            ))}\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nFeedbackOption.propTypes = {\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOption;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./notification.module.css\";\r\n\r\nconst Notification = ({ message }) => {\r\n    return (\r\n        <p className={styles.message}>{message}</p>\r\n    )\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './statistics.module.css'\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n        <ul className={styles.feedbackList}>\r\n            <li className={styles.feedbackItem} >Good: {good}</li>\r\n            <li className={styles.feedbackItem}>Neutral: {neutral}</li>\r\n            <li className={styles.feedbackItem}>Bad: {bad}</li>\r\n            <li className={styles.feedbackItem}>Total:{total}</li>\r\n            <li className={styles.feedbackItem}>Positive feedback:{positivePercentage}%</li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total: PropTypes.number,\r\n    positiveFeedback: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;","import { useState } from 'react';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\nimport Statistics from './components/Statistics';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const addFeedback = (options) => {\n    switch (options) {\n      case 'good':\n        setGood(prevGood => prevGood + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(prevNeutral => prevNeutral + 1)\n        break;\n\n      case 'bad':\n        setBad(prevBad => prevBad + 1)\n        break;\n\n      default:\n        return;\n    }\n  }\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.floor((good * 100) / countTotalFeedback());\n  }\n\n  const options = Object.keys({ good, neutral, bad });\n  const total = countTotalFeedback();\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={options}\n          onLeaveFeedback={addFeedback}\n        />\n      </Section>\n\n      <Section title=\"Statistics\">\n        {total === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        )}\n      </Section>\n    </>\n  );\n}\n\n\n\n\n// class App extends Component {\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   };\n\n//   addFeedback = option => {\n//     this.setState(prevState => ({ [option]: prevState[option] + 1 }));\n//   };\n\n//   countTotalFeedback = function () {\n//     return this.state.good + this.state.neutral + this.state.bad;\n//   };\n\n//   countPositiveFeedbackPercentage = function () {\n//     return Math.floor((this.state.good * 100) / this.countTotalFeedback());\n//   };\n\n//   render() {\n//     const { good, neutral, bad } = this.state;\n//     const total = this.countTotalFeedback();\n//     const positiveFeedback = this.countPositiveFeedbackPercentage();\n//     return (\n//       <>\n//         <Section title=\"Please leave feedback\">\n//           <FeedbackOptions\n//             options={Object.keys(this.state)}\n//             onLeaveFeedback={this.addFeedback}\n//           />\n//         </Section>\n\n//         <Section title=\"Statistics\">\n//           {total === 0 ? (\n//             <Notification message=\"No feedback given\" />\n//           ) : (\n//             <Statistics\n//               good={good}\n//               neutral={neutral}\n//               bad={bad}\n//               total={total}\n//               positivePercentage={positiveFeedback}\n//             />\n//           )}\n//         </Section>\n//       </>\n//     );\n//   }\n// }\n// export default App;","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}